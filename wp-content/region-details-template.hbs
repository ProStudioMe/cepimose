<div class="region-details-container">
  <div class="table-section">
    <h2
      style="width: 100%; text-align: center; text-transform: uppercase; min-width: 100%; border-radius: 999em; background-color: #0099ff"
    >{{#if title}}
        {{title}}
      {{else}} {{id}} {{/if}}</h2>
    <table class="region-details-table">
      <tbody>
        <tr>
          <td class="field-label">
            {{#if post.acf.hepatitis_a_label}}
              {{post.acf.hepatitis_a_label}}
            {{/if}}
          </td>
          {{#if post.acf.hepatitis_a}}
            <td class="field-value {{post.acf.hepatitis_a.value}}"></td>
          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.hepatitis_b_label}}
              {{post.acf.hepatitis_b_label}}
            {{/if}}
          </td>
          {{#if post.acf.hepatitis_b}}
            <td class="field-value {{post.acf.hepatitis_b.value}}"></td>
          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.japonski_encefalitis_label}}
              {{post.acf.japonski_encefalitis_label}}
            {{/if}}
          </td>
          {{#if post.acf.japonski_encefalitis}}
            <td
              class="field-value {{post.acf.japonski_encefalitis.value}}"
            ></td>

          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.klopni_meningitis_label}}
              {{post.acf.klopni_meningitis_label}}
            {{/if}}
          </td>
          {{#if post.acf.klopni_meningitis}}
            <td class="field-value {{post.acf.klopni_meningitis.value}}"></td>

          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.meningok_meningitis_label}}
              {{post.acf.meningok_meningitis_label}}
            {{/if}}
          </td>
          {{#if post.acf.meningok_meningitis}}
            <td class="field-value {{post.acf.meningok_meningitis.value}}"></td>

          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.otroska_paraliza_label}}
              {{post.acf.otroska_paraliza_label}}
            {{/if}}
          </td>
          {{#if post.acf.otroska_paraliza}}
            <td class="field-value {{post.acf.otroska_paraliza.value}}"></td>

          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.rumena_mrzlica_label}}
              {{post.acf.rumena_mrzlica_label}}
            {{/if}}
          </td>
          {{#if post.acf.rumena_mrzlica}}
            <td class="field-value {{post.acf.rumena_mrzlica.value}}"></td>

          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.steklina_label}}
              {{post.acf.steklina_label}}
            {{/if}}
          </td>
          {{#if post.acf.steklina}}
            <td class="field-value {{post.acf.steklina.value}}"></td>

          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.tetanus_label}}
              {{post.acf.tetanus_label}}
            {{/if}}
          </td>
          {{#if post.acf.tetanus}}
            <td class="field-value {{post.acf.tetanus.value}}"></td>

          {{/if}}
        </tr>

        <tr>
          <td class="field-label">
            {{#if post.acf.trebusni_tifus_label}}
              {{post.acf.trebusni_tifus_label}}
            {{/if}}
          </td>
          {{#if post.acf.trebusni_tifus}}
            <td class="field-value {{post.acf.trebusni_tifus.value}}"></td>

          {{/if}}
        </tr>
      </tbody>
    </table>

    <!-- Legend Drawer Button -->
    <div class="legend-drawer-button-container">
      <button class="legend-drawer-button" onclick="toggleLegendDrawer()">
        <span class="button-text">Prikaži legendo</span>
        <span class="button-icon">▲</span>
      </button>
    </div>
  </div>

  <div class="legend-section" id="legendDrawer">
    <div class="legend-container">
      <div class="legend-header">
        <h3 class="legend-title">Legenda</h3>
        <button
          class="close-legend-button"
          onclick="toggleLegendDrawer()"
        >×</button>
      </div>
      <div class="legend-group">
        <h4 class="legend-group-title">PRIPOROČENA ZAŠČITA (CEPLJENJE) ZA
          POTNIKE</h4>
        <div class="legend-item">
          <div class="legend-color cepljenje_light"></div>
          <span class="legend-text">Cepljenje priporočamo določenim skupinam
            potnikov (upoštevaje zdravstveno stanje, dolžino potovanja, predel
            potovanja, način potovanja, poklicno izpostavljenost, itd …</span>
        </div>
        <div class="legend-item">
          <div class="legend-color cepljenje_middle"></div>
          <span class="legend-text">Cepljenje priporočamo vsem, ki potujejo na
            področja z večjim tveganjem za pojav bolezni pri ljudeh oziroma
            živalih in/ali so prisotni vektorji- prenašalci teh bolezni</span>
        </div>
        <div class="legend-item">
          <div class="legend-color cepljenje_dark"></div>
          <span class="legend-text">Za vstop v državo je obvezen certifikat o
            cepljenju</span>
        </div>
      </div>

      <div class="legend-group">
        <h4 class="legend-group-title">OBVEZNA ZAŠČITA ZA POTNIKE</h4>
        <div class="legend-item">
          <div class="legend-color rumeni_ce_b"></div>
          <span class="legend-text">Cepljenje je obvezno za vstop v ciljno
            državo za vse potnike, ne glede od kod prihajajo</span>
        </div>
        <div class="legend-item">
          <div class="legend-color rumeni_yellow"></div>
          <span class="legend-text">Označuje državo, ki ima povsod tveganje za
            rumeno mrzlico, zato je za slovenske potnike cepljenje obvezno</span>
        </div>
        <div class="legend-item">
          <div class="legend-color rumeni_ce"></div>
          <span class="legend-text">Cepljenje je obvezno za vstop v ciljno
            državo za potnika, ki potuje iz države, kjer imajo rumeno mrlico
            (ali je v tranzitu na letališču države, kjer imajo rumeno mrzlico)</span>
        </div>
        <div class="legend-item">
          <div class="legend-color yellow_light"></div>
          <span class="legend-text">Označuje državo, ki ima na nekaterih
            področjih tveganje za rumeno mrzlico in z vstopom na ta področja je
            za slovenske potnike cepljenje obvezno</span>
        </div>
        <div class="legend-item">
          <div class="legend-color rumeni_-"></div>
          <span class="legend-text">Zahteve ciljne države potovanja</span>
        </div>
        <div class="legend-item">
          <div class="legend-color rumeni_--"></div>
          <span class="legend-text">Zahteva Slovenije na podlagi veljavnega
            programa cepljenja in zaščite z zdravili za slovenske potnike v
            mednarodnem prometu</span>
        </div>
        <div class="legend-item">
          <div class="legend-color rumeni_---"></div>
          <span class="legend-text">Dodatne zahteve/izjeme ciljne države
            potovanja (izvzete države z rumeno mrzlico ali dodane države brez
            rumene mrzlice)</span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* CSS VARIABLES */
  :root {
    --color-cepljenje_light: #d9d9fc;
    --color-cepljenje_middle: #a6a6f9;
    --color-cepljenje_dark: #8080f7;
    --color-rumeni_ce_b: #ff4500;
    --color-rumeni_yellow: #ffa500;
    --color-rumeni_ce: #ffbf00;
    --color-yellow_light: #daa520;
    --color-rumeni_-: #ffd700;
    --color-rumeni_--: #fff8c0;
    --color-rumeni_---: #ffffe0;
  }

  /* LAYOUT CONTAINER */
  .region-details-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 15px;
    margin: 10px 0;
    align-items: flex-start;
    position: relative;
  }

  .table-section {
    flex: 1;
    min-width: 0;
  }

  /* LEGEND DRAWER STYLES - BOTTOM TO TOP */
  .legend-section {
    position: fixed;
    bottom: -97%;
    left: 0;
    right: 0;
    width: 100%;
    height: 97%;
    background: white;
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
    z-index: 9999;
    transition: bottom 0.3s ease-in-out;
    overflow-y: auto;
    border-radius: 10px 10px 0 0;
  }

  .legend-section.open {
    bottom: 0;
  }

  .legend-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, transparent 0%, rgba(255, 255, 255, 0.9) 10%, white 100%);
    pointer-events: none;
    z-index: -1;
  }

  .legend-drawer-button-container {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    padding: 10px 0;
  }

  .legend-drawer-button {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 20px;
    background: white;
    color: #0099ff;
    border: 1px solid #0099ff;
    border-radius: 8px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .legend-drawer-button:hover {
opacity: 90%;


  }

  .legend-drawer-button:active {
    transform: translateY(0);
  }

  .button-icon {
    transition: transform 0.3s ease;
  }

  .legend-section.open + .table-section .button-icon {
    transform: rotate(180deg);
  }

  .legend-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 20px 0 20px;
    border-bottom: 1px solid #e2e8f0;
    margin-bottom: 20px;
  }

  .close-legend-button {
    background: none;
    border: none;
    font-size: 24px;
    color: #6b7280;
    cursor: pointer;
    padding: 0;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all 0.2s ease;
  }

  .close-legend-button:hover {
    background: #f3f4f6;
    color: #374151;
  }

  /* EXISTING MAPSVG REGION DETAILS STYLES */
  .region-details-table {
    width: 100%;
    margin-top: .5em;
    border-collapse: separate;
    border-spacing: 0;
    border-radius: 8px;
    overflow: hidden;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .region-details-table td {
    padding: 4px 6px;
    border: 1px solid #e2e8f0;
    vertical-align: top;
  }

  .region-details-table tr:first-child td:first-child {
    border-top-left-radius: 8px;
  }

  .region-details-table tr:first-child td:last-child {
    border-top-right-radius: 8px;
  }

  .region-details-table tr:last-child td:first-child {
    border-bottom-left-radius: 8px;
  }

  .region-details-table tr:last-child td:last-child {
    border-bottom-right-radius: 8px;
  }

  .field-label {
    font-size: 12px;
    font-weight: 300;
    background-color: white;
    color: #374151;
    width: 60%;
  }

  .field-value {
    background-color: #ffffff;
    color: #1f2937;
  }

  /* Cepljenje level styling */
  .cepljenje_light {
    background-color: var(--color-cepljenje_light) !important;
    color: #1f2937 !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  .cepljenje_middle {
    background-color: var(--color-cepljenje_middle) !important;
    color: #ffffff !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  .cepljenje_dark {
    background-color: var(--color-cepljenje_dark) !important;
    color: #ffffff !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  /* Rumena mrzlica (Yellow fever) level styling */
  .rumeni_ce_b {
    background-color: var(--color-rumeni_ce_b) !important;
    color: #ffffff !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  .rumeni_yellow {
    background-color: var(--color-rumeni_yellow) !important;
    color: #ffffff !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  .rumeni_ce {
    background-color: var(--color-rumeni_ce) !important;
    color: #1f2937 !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  .yellow_light {
    background-color: var(--color-yellow_light) !important;
    color: #ffffff !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  .rumeni_- {
    background-color: var(--color-rumeni_-) !important;
    color: #1f2937 !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  .rumeni_-- {
    background-color: var(--color-rumeni_--) !important;
    color: #1f2937 !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  .rumeni_--- {
    background-color: var(--color-rumeni_---) !important;
    color: #1f2937 !important;
    position: relative;
    padding-left: 2.5em !important;
  }

  /* LEGEND STYLES */
  .legend-container {
    background-color: #ffffff;
    border: none;
    border-radius: 0;
    padding: 0 20px 20px 20px;
    box-shadow: none;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  }

  .legend-title {
    font-size: 18px;
    color: #1f2937;
    margin: 0;
    font-weight: 600;
  }

  .legend-group {
    margin-bottom: 25px;
  }

  .legend-group:last-child {
    margin-bottom: 0;
  }

  .legend-group-title {
    font-size: 12px;
    color: #374151;
    font-weight: 600;
    border-bottom: 1px solid #e2e8f0;
    padding-bottom: 6px;
    padding-left: 0 !important;
  }

  .legend-item {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
    gap: 12px;
  }

  .legend-item:last-child {
    margin-bottom: 0;
  }

  .legend-color {
    width: 24px;
    height: 16px;
    border-radius: 9999em;
    flex-shrink: 0;
  }

  .legend-text {
    text-align: left;
    font-weight: 300;
    font-size: 12px;
    color: #374151;
    line-height: 1.4;
  }

  /* RESPONSIVE DESIGN */
  @media (max-width: 768px) {
    .region-details-container {
      flex-direction: column;
      gap: 10px;
    }
    .region-details-table {
      font-size: 14px;
    }
    .region-details-table td {
      padding: 8px 12px;
    }
    .field-label {
      width: 35%;
    }
    .legend-section {
      height: 97%;
      bottom: -97%;
    }
    .legend-container {
      padding: 0 15px 15px 15px;
    }
    .legend-title {
      font-size: 16px;
    }
    .legend-group-title {
      font-size: 13px;
    }
    .legend-text {
      font-size: 11px;
    }
  }

  @media (max-width: 480px) {
    .region-details-table {
      display: block;
    }
    .region-details-table tbody {
      display: block;
    }
    .region-details-table tr {
      display: block;
      margin-bottom: 16px;
      border: 1px solid #e2e8f0;
      border-radius: 8px;
      overflow: hidden;
    }
    .region-details-table td {
      display: block;
      width: 100%;
      border: none;
      border-bottom: 1px solid #e2e8f0;
    }
    .region-details-table td:last-child {
      border-bottom: none;
    }
    .field-label {
      width: 100%;
      font-size: 13px;
    }
    .legend-section {
      height: 97%;
      bottom: -97%;
    }
    .legend-container {
      padding: 0 10px 10px 10px;
    }
    .legend-title {
      font-size: 14px;
    }
    .legend-group-title {
      font-size: 12px;
    }
    .legend-text {
      font-size: 10px;
    }
  }

  /* Empty value styling */
  .empty-value {
    background-color: #f8fafc;
    color: #9ca3af;
    font-style: italic;
  }
</style>

<script>
function toggleLegendDrawer() {
  console.log('toggleLegendDrawer called');
  
  const legendDrawer = document.getElementById('legendDrawer');
  const button = document.querySelector('.legend-drawer-button');
  const buttonText = document.querySelector('.button-text');
  const buttonIcon = document.querySelector('.button-icon');
  
  console.log('Legend drawer element:', legendDrawer);
  console.log('Button element:', button);
  console.log('Button text element:', buttonText);
  console.log('Button icon element:', buttonIcon);
  
  if (!legendDrawer || !button || !buttonText || !buttonIcon) {
    console.error('One or more elements not found');
    return;
  }
  
  console.log('Current classes on legend drawer:', legendDrawer.className);
  console.log('Has open class?', legendDrawer.classList.contains('open'));
  
  if (legendDrawer.classList.contains('open')) {
    console.log('Closing drawer - removing open class');
    legendDrawer.classList.remove('open');
    buttonText.textContent = 'Prikaži legendo';
    buttonIcon.textContent = '▲';
  } else {
    console.log('Opening drawer - adding open class');
    legendDrawer.classList.add('open');
    buttonText.textContent = 'Skrij legendo';
    buttonIcon.textContent = '▼';
  }
  
  console.log('After toggle - classes on legend drawer:', legendDrawer.className);
  console.log('After toggle - has open class?', legendDrawer.classList.contains('open'));
}

document.addEventListener('click', function(event) {
  const legendDrawer = document.getElementById('legendDrawer');
  const button = document.querySelector('.legend-drawer-button');
  
  if (legendDrawer && legendDrawer.classList.contains('open') && 
      !legendDrawer.contains(event.target) && 
      !button.contains(event.target)) {
    toggleLegendDrawer();
  }
});

document.addEventListener('keydown', function(event) {
  if (event.key === 'Escape') {
    const legendDrawer = document.getElementById('legendDrawer');
    if (legendDrawer && legendDrawer.classList.contains('open')) {
      toggleLegendDrawer();
    }
  }
});

function debugDrawer() {
  console.log('=== DEBUG DRAWER ===');
  const legendDrawer = document.getElementById('legendDrawer');
  const button = document.querySelector('.legend-drawer-button');
  const buttonText = document.querySelector('.button-text');
  const buttonIcon = document.querySelector('.button-icon');
  
  console.log('Legend drawer element:', legendDrawer);
  console.log('Button element:', button);
  console.log('Button text element:', buttonText);
  console.log('Button icon element:', buttonIcon);
  
  if (legendDrawer) {
    console.log('Legend drawer classes:', legendDrawer.className);
    console.log('Legend drawer computed style bottom:', window.getComputedStyle(legendDrawer).bottom);
  }
  
  console.log('===================');
}

document.addEventListener('DOMContentLoaded', function() {
  console.log('DOM loaded, running debug...');
  debugDrawer();
});

setTimeout(function() {
  console.log('Delayed debug...');
  debugDrawer();
}, 1000);

function testOpenClass() {
  const legendDrawer = document.getElementById('legendDrawer');
  if (legendDrawer) {
    console.log('Manually adding open class');
    legendDrawer.classList.add('open');
    console.log('Classes after manual add:', legendDrawer.className);
  }
}

window.testOpenClass = testOpenClass;
</script>